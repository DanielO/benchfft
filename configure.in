dnl Process this file with autoconf to produce a configure script.
AC_INIT(libbench/bench.h)
AC_PREREQ(2.50)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(benchfft, 3.0-alpha0)
AM_CONFIG_HEADER(config.h)

dnl configure options
AC_ARG_ENABLE(debug, [  --enable-debug          compile benchfft with extra runtime checks for debugging], ok=$enableval, ok=no)
if test "$ok" = "yes"; then
	AC_DEFINE(BENCHFFT_DEBUG,1,[Define to enable extra benchfft debugging code.])
fi

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CC_STDC
AC_PROG_F77
ACX_PROG_CC_EGCS
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_AWK
AC_CHECK_PROG(GZIP, gzip, gzip)
AC_CHECK_PROG(TAR, tar, tar)
AC_CHECK_PROG(MKDIR, mkdir, mkdir)
AC_CHECK_PROG(TR, tr, tr)
AC_CHECK_PROG(CP, cp, cp)
AC_F77_LIBRARY_LDFLAGS
AC_F77_WRAPPERS

AM_CONDITIONAL(HAVE_F77, test -n "$F77")

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(malloc.h sys/time.h unistd.h string.h)
AC_CHECK_HEADERS(alloca.h stddef.h libintl.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MALLOC
AC_FUNC_VPRINTF
AC_CHECK_LIB(m, sin)
AC_CHECK_FUNCS(BSDgettimeofday)
AC_CHECK_FUNCS(gettimeofday)
AC_CHECK_FUNCS(drand48)
AC_CHECK_FUNCS(hypot)
AC_CHECK_FUNCS(sqrt)
AC_CHECK_FUNCS(strtod)
AC_CHECK_FUNCS(memset)

dnl Check for installed libraries

dnl Checks for ESSL libraries: -lessl -lxlf -lxlf90 -lxlfutil
AC_CHECK_LIB(xlf90, sqrt)
AC_CHECK_LIB(xlf, sqrt)
AC_CHECK_LIB(essl, dcft)

dnl Check for DEC Alpha DXML library
AC_CHECK_LIB(dxml, zfft_apply_)
AC_CHECK_LIB(for, for_stop)

dnl Check for Sun Performance library:
dnl AC_CHECK_LIB(SUNWPro_lic, __lsp_rethread_mn_ph_)
AC_CHECK_LIB(sunmath, acosp)
AC_CHECK_LIB(F77, ishft_)
AC_CHECK_LIB(f90, _F90_STOP)
AC_CHECK_LIB(sunperf, cfftf_,
	[LIBS="-xlic_lib=sunperf $LIBS"; 
	AC_DEFINE(HAVE_LIBSUNPERF, 1, [Define if you have the Sun Performance Library])])
AC_CHECK_LIB(M77, __pow_ri)

dnl Check for SGIMATH library:
AC_CHECK_LIB(complib.sgimath, zfft1d,
	[LIBS="-lcomplib.sgimath $LIBS"; have_sgimath=yes])
AM_CONDITIONAL(HAVE_SGIMATH, test -n "$have_sgimath")

dnl Check for SCSL library (SGI/Cray Scientific Library):
AC_CHECK_LIB(scs, zzfft)

dnl Check for Cray SCILIB library:
AC_CHECK_LIB(sci, CCFFT)

dnl Check for IMSL library:
AC_CHECK_LIB(imsl, imsl_fftf)

dnl Check for NAG library:
AC_CHECK_LIB(nag, c06fcf)

AC_MSG_CHECKING([for isnan])
AC_TRY_LINK([#include <math.h>
], if (!isnan(3.14159)) isnan(2.7183);, ok=yes, ok=no)
if test "$ok" = "yes"; then
	AC_DEFINE(HAVE_ISNAN,1,[Define if the isnan() function/macro is available.])
fi
AC_MSG_RESULT(${ok})


dnl check for optimization options
dnl This macro sets ANSI mode for certain compilers, and must
dnl thus come before the subsequenct checks
ACX_PROG_CC_MAXOPT(benchfft)

dnl override CFLAGS selection when debugging
if test "${enable_debug}" = "yes"; then
	CFLAGS="-g"
fi


AC_DEFINE_UNQUOTED(BENCH_HOST, "$host", [host type])
AC_DEFINE_UNQUOTED(BENCH_HOSTNAME, "$ac_hostname", [host name])
AC_DEFINE_UNQUOTED(BENCH_CC, "$CC $CFLAGS", [C compiler name and flags])
AC_DEFINE_UNQUOTED(BENCH_F77, "$F77 $FFLAGS", 
	[FORTRAN compiler name and flags])

dnl TODO
ACX_GCC_ALIGNS_STACK()

AC_OUTPUT([
Makefile
libbench/Makefile
benchees/Makefile

benchees/cwplib/Makefile
benchees/dfftpack/Makefile
benchees/djbfft-0.76/Makefile
benchees/dsp/Makefile
benchees/fftpack/Makefile
benchees/gpfa/Makefile
benchees/green-ffts-2.0/Makefile
benchees/ooura/Makefile
benchees/sgimath/Makefile
benchees/singleton/Makefile

])
